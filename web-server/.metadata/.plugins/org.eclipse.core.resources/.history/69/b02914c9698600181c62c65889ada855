package template;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;

public class TemplateEngine {

	private static final String LOGIC_TAG_START = "$[";
	private static final String LOGIC_TAG_END = "]$";

	private static final String LOGIC_IF = "IF";
	private static final String LOGIC_FOREACH = "FOREACH";


	private static final String PROPARTY_TAG_START = "@(";
	private static final String PROPARTY_TAG_END = ")@";

	private String templateDir;

	public TemplateEngine(String templateDir) {
		super();
		this.templateDir = templateDir;
	}

	public String parse(String templateFileName, Object context) throws Exception {

		StringBuffer result = new StringBuffer();
		File file = new File (this.templateDir + "/" + templateFileName);
		if (!file.exists()) {
			throw new Exception("テンプレートファイルが見つかりません : " + file.getAbsolutePath());
		}
		BufferedReader br = null;
		try {
			br = new BufferedReader(new FileReader(file));
			String lineStr = br.readLine();
			while(lineStr != null) {
				if (existsPropertyTag(lineStr)) {
					lineStr = replacePropertyTag(lineStr, context);
				}
				result.append(lineStr);
			}
		} finally {
			br.close();
		}
		return result.toString();
	}

	private boolean existsPropertyTag(String str) {

		if (str.indexOf(PROPARTY_TAG_START) >= 0) {
			if (str.indexOf(PROPARTY_TAG_END) >= 0) {
				return true;
			}
		}
		return false;

	}

	private String replacePropertyTag(String str, Object context) {

		int tagStartPosition = str.indexOf(PROPARTY_TAG_START);
		int tagEndPosition = str.indexOf(PROPARTY_TAG_END) + PROPARTY_TAG_START.length();
		String tag = str.substring(tagStartPosition, tagEndPosition);
		String propertyName = tag.replace(PROPARTY_TAG_START, "").replace(PROPARTY_TAG_END, "").trim();
		return str.replace(tag, getPropertyValue(propertyName, context));

	}

	private String getPropertyValue(String propertyName, Object context) {

		Object value = null;
		String[] propertyNameArr = propertyName.split(".");
		for (int i = 0; i < propertyNameArr.length; i++) {

		}
		return "";

	}

}
