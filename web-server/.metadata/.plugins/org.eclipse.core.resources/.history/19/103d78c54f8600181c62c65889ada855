package template;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TemplateEngine {

	private static final String LOGIC_TAG_START = "$[";
	private static final String LOGIC_TAG_END = "]$";

	private static final String LOGIC_IF = "IF";
	private static final String LOGIC_FOREACH = "FOREACH";


	private static final String PROPARTY_TAG_START = "@(";
	private static final String PROPARTY_TAG_END = ")@";

	private String templateDir;

	public TemplateEngine(String templateDir) {
		super();
		this.templateDir = templateDir;
	}

	public String parse() {

		String str = "aaaaa@(prop.kkk)@hhhhhhh";
		if (existsLogicTag(str)) {
			str = replacePropertyTag(str, "1234");
		}
		return "";
	}

	private boolean existsLogicTag(String str) {

		Pattern p = Pattern.compile(PROPARTY_TAG_START + "*" + PROPARTY_TAG_END);
		Matcher m = p.matcher(str);
		return m.matches();

	}

	private String replacePropertyTag(String str, String propStr) {

		int tagStart = str.indexOf(PROPARTY_TAG_START);
		int tagEnd = str.indexOf(PROPARTY_TAG_END) + PROPARTY_TAG_START.length();
		String tag = str.substring(tagStart, tagEnd);
		return str.replaceAll(tag, propStr);

	}
}
